-- Q.1 Retrieve the total number of rentals made in the Sakila database. 

use sakila;
select count(rental_id) as rental_count from rental;
-- A total of 16044 Rentals made.

-- Q.2 Find the average rental duration (in days) of movies rented from the Sakila database.

select avg(rental_duration) as avg_rental_days from film;
-- An Average of approx 5 days is the rental duration of movies.alter

-- Q.3 Display the first name and last name of customers in uppercase. 

select upper(first_name) as First_Name, Upper(last_name) as Last_Name from customer;

-- Q.4 Extract the month from the rental date and display it alongside the rental ID.

SELECT 
    rental_id,
    MONTH(rental_date) AS month_rental_date,
    MONTHNAME(rental_date) AS rental_month
FROM
    rental; 

--  Q.5 Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 

SELECT 
    customer_id, COUNT(rental_id) AS rental_count
FROM
    rental
GROUP BY customer_id
ORDER BY customer_id;

-- Q.6 Find the total revenue generated by each store. 
SELECT 
    s.store_id, SUM(p.amount) AS Revenue
FROM
    store s
        LEFT JOIN
    payment p ON s.manager_staff_id = p.staff_id
GROUP BY s.store_id;

-- Q.7 Display the title of the movie, customers' first name and last name who rented it. 
SELECT 
    c.first_name, c.last_name, f.title
FROM
    customer c
        INNER JOIN
    rental r ON c.customer_id = r.customer_id
        INNER JOIN
    inventory i ON r.inventory_id = i.inventory_id
        INNER JOIN
    film f ON i.film_id = f.film_id;

-- Q.8 Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 

SELECT 
    CONCAT(a.first_name, ' ', a.last_name) AS Actors, f.title
FROM
    actor a
        INNER JOIN
    film_actor fa ON a.actor_id = fa.actor_id
        INNER JOIN
    film f ON fa.film_id = f.film_id
WHERE
    title = 'Gone with the Wind.';
-- No film with the given title is found.

-- GROUP BY Q.1 Determine the total number of rentals for each category of movies. 
SELECT 
    c.name AS Category, COUNT(r.rental_id) AS rentals_count
FROM
    rental r
        INNER JOIN
    inventory i ON r.inventory_id = i.inventory_id
        INNER JOIN
    film_category fc ON i.film_id = fc.film_id
        INNER JOIN
    category c ON fc.category_id = c.category_id
GROUP BY c.name;

-- Q.2 Find the average rental rate of movies in each language. 

SELECT 
    AVG(f.rental_rate) AS Avg_Rental_Rate, l.name
FROM
    film f
        INNER JOIN
    language l ON f.language_id = l.language_id
GROUP BY f.language_id;

-- Joins Q.3 Retrieve the customer names along with the total amount they've spent on rentals. 
SELECT 
    c.customer_id,
    CONCAT(c.first_name, ' ', c.last_name) AS Customer_Name,
    SUM(p.amount) AS Total_Amount
FROM
    customer c
        INNER JOIN
    payment p ON c.customer_id = p.customer_id
GROUP BY p.customer_id;

-- Q.4 List the titles of movies rented by each customer in a particular city (e.g., 'London'). 

SELECT 
    ci.city,
    ci.city_id,
    CONCAT(c.First_name, ' ', c.last_name) AS Name,
    f.title
FROM
    city ci
        INNER JOIN
    address a ON ci.city_id = a.city_id
        INNER JOIN
    store s ON a.address_id = s.address_id
        INNER JOIN
    customer c ON s.store_id = c.store_id
        INNER JOIN
    rental r ON c.customer_id = r.customer_id
        INNER JOIN
        inventory i ON r.inventory_id = i.inventory_id
        INNER JOIN
        film f on i.film_id = f.film_id
        ORDER BY
        ci.city_id;
    
 -- Q.5 Display the top 5 rented movies along with the number of times they've been rented. 
 
SELECT 
    COUNT(r.rental_id) AS Rental_Count, f.title
FROM
    rental r
        INNER JOIN
    inventory i ON r.inventory_id = i.inventory_id
        INNER JOIN
    film f ON i.film_id = f.film_id
GROUP BY f.title
ORDER BY Rental_Count DESC
LIMIT 5;

-- Q. Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
select * from customer; 

SELECT 
    c.customer_id,
    CONCAT(c.first_name, ' ', c.last_name) AS Customer_Name,
    COUNT(distinct(i.store_id)) AS storeID_Count
FROM
    customer c
        INNER JOIN
    rental r ON c.customer_id = r.customer_id
        INNER JOIN
    inventory i ON r.inventory_id = i.inventory_id
GROUP BY r.customer_id
HAVING storeID_Count > 1;


